/*
 * Users API
 * An API to demonstrate Swagger and Spring Boot
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.avalia.users.api;

import io.avalia.users.ApiException;
import io.avalia.users.api.dto.UserAuth;
import io.avalia.users.api.dto.UserInput;
import io.avalia.users.api.dto.UserToken;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * 
     *
     * Try to authenticate
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthenticationTokenTest() throws ApiException {
        UserAuth userAuth = null;
        Object response = api.createAuthenticationToken(userAuth);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Create a user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        UserInput userInput = null;
        Object response = api.createUser(userInput);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Delete the user with this password
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserByIDTest() throws ApiException {
        String email = null;
        api.deleteUserByID(email);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get the user with this email
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserByIDTest() throws ApiException {
        String email = null;
        UserToken response = api.getUserByID(email);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Get a list of all users
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsersTest() throws ApiException {
        Integer pageNumber = null;
        Integer numberOfUsersPerPage = null;
        List<UserToken> response = api.getUsers(pageNumber, numberOfUsersPerPage);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * Change password with this email
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePasswordByIDTest() throws ApiException {
        String email = null;
        String password = null;
        api.updatePasswordByID(email, password);

        // TODO: test validations
    }
    
}
