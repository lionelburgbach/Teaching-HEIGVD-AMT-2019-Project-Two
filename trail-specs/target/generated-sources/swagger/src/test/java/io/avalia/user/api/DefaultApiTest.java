/*
 * Trailer API
 * An API to demonstrate Swagger and Spring Boot
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.avalia.user.api;

import io.avalia.user.ApiException;
import io.avalia.user.api.dto.Registration;
import io.avalia.user.api.dto.Trail;
import io.avalia.user.api.dto.User;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * 
     *
     * all trails
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void allTrailsTest() throws ApiException {
        List<Trail> response = api.allTrails();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a registration
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRegistrationTest() throws ApiException {
        Registration user = null;
        Object response = api.createRegistration(user);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a trail
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTrailTest() throws ApiException {
        Trail trail = null;
        Object response = api.createTrail(trail);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a user
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        User user = null;
        Object response = api.createUser(user);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRegistrationTest() throws ApiException {
        Long id = null;
        api.deleteRegistration(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTrailTest() throws ApiException {
        Long id = null;
        api.deleteTrail(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        String email = null;
        api.deleteUser(email);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRegistrationByIDTest() throws ApiException {
        Long id = null;
        Registration response = api.getRegistrationByID(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTrailByIDTest() throws ApiException {
        Long id = null;
        Trail response = api.getTrailByID(id);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserByIDTest() throws ApiException {
        String email = null;
        User response = api.getUserByID(email);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTrailTest() throws ApiException {
        Long id = null;
        Trail body = null;
        api.updateTrail(id, body);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        String email = null;
        User body = null;
        api.updateUser(email, body);

        // TODO: test validations
    }
    
}
