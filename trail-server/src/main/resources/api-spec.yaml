swagger: '2.0'
info:
  version: 0.1.0
  title: Trailer API
  description: An API to demonstrate Swagger and Spring Boot
host: 'localhost:8081'
basePath: /api
schemes:
  - http

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

paths:

  /users:
    post:
      security:
        - Bearer: []
      description: create a user
      operationId: createUser
      consumes:
        - application/json
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        201:
          description: created
          schema:
            type: object
  /users/{email}:
    get:
      security:
        - Bearer: []
      description: ""
      operationId: getUserByID
      produces:
        - "application/json"
      parameters:
        - name: email
          in: path
          description: "The name that needs to be fetched. Use user1 for testing. "
          required: true
          type: string
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"
    put:
      security:
        - Bearer: []
      description: ""
      operationId: updateUserByID
      produces:
        - "application/json"
      parameters:
        - name: email
          in: path
          description: "name that need to be updated"
          required: true
          type: string
        - in: body
          name: userUpdate
          description: "Updated user object"
          required: true
          schema:
            $ref: "#/definitions/UserUpdate"
      responses:
        400:
          description: "Invalid user supplied"
        404:
          description: "User not found"
    delete:
      security:
        - Bearer: []
      operationId: deleteUserByID
      produces:
        - "application/json"
      parameters:
        - name: email
          in: path
          description: "The name that needs to be deleted"
          required: true
          type: string
      responses:
        400:
          description: "Invalid username supplied"
        404:
          description: "User not found"

  /trails:
    get:
      security:
        - Bearer: []
      description: all trails
      operationId: getTrails
      produces:
        - application/json
      parameters:
        - name: PageNumber
          in: query
          default: 0
          required: false
          type: integer
        - name: numberOfTrails
          in: query
          default: 30
          required: false
          type: integer
      responses:
        200:
          description: read
          schema:
            type: array
            items:
              $ref: '#/definitions/TrailOutput'
    post:
      security:
        - Bearer: []
      description: create a trail
      operationId: createTrail
      consumes:
        - application/json
      parameters:
        - name: trail
          in: body
          required: true
          schema:
            $ref: '#/definitions/Trail'
      responses:
        201:
          description: created
          schema:
            type: object

  /trails/{id}:
    get:
      security:
        - Bearer: []
      description: ""
      operationId: getTrailByID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          description: "The id of the trail"
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TrailOutput"
        400:
          description: "Invalid Trail supplied"
        404:
          description: "Trail not found"
    put:
      security:
        - Bearer: []
      description: ""
      operationId: updateTrailByID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          description: "trail that need to be updated"
          required: true
          type: integer
          format: int64
        - in: body
          name: "trail"
          description: "Updated Trail object"
          required: true
          schema:
            $ref: "#/definitions/TrailUpdate"
      responses:
        400:
          description: "Invalid trail supplied"
        404:
          description: "Trail not found"
    delete:
      security:
        - Bearer: []
      operationId: deleteTrailByID
      produces:
        - "application/json"
      parameters:
        - name: id
          in: path
          description: "trail that needs to be deleted"
          required: true
          type: integer
          format: int64
      responses:
        400:
          description: "Invalid Trail id supplied"
        404:
          description: "Trail not found"

  /registrations:
    post:
      security:
        - Bearer: []
      description: create a registration
      operationId: createRegistration
      consumes:
        - application/json
      parameters:
        - name: user
          in: body
          required: true
          schema:
            $ref: "#/definitions/Registration"
      responses:
        201:
          description: created
          schema:
            type: object
  /registrations/{email}:
    get:
      security:
        - Bearer: []
      description: ""
      operationId: getRegistrationsByIdUser
      produces:
        - "application/json"
      parameters:
        - name: email
          in: path
          description: "All registration for this user "
          required: true
          type: string
        - name: PageNumber
          in: query
          default: 0
          required: false
          type: integer
        - name: numberOfRegistration
          in: query
          default: 30
          required: false
          type: integer
      responses:
        200:
          description: read
          schema:
            type: array
            items:
              $ref: '#/definitions/RegistrationOutput'
        400:
          description: "Invalid id supplied"
        404:
          description: "Registration not found"
    delete:
      security:
        - Bearer: []
      operationId: deleteRegistrationByID
      produces:
        - "application/json"
      parameters:
        - name: email
          in: path
          description: "The registration id that needs to be deleted"
          required: true
          type: string
        - name: id
          in: query
          description: "The registration id that needs to be deleted"
          required: true
          type: integer
          format: int64
      responses:
        400:
          description: "Invalid id supplied"
        404:
          description: "Registration not found"
definitions:
  UserUpdate:
    type: object
    properties:
      firstname:
        type: string
      lastname:
        type: string
      date:
        type: string
  User:
    allOf:
      - $ref: "#/definitions/UserUpdate"
      - type: object
        properties:
          email:
            type: string
  Trail:
    type: object
    properties:
      name:
        type: string
      length:
        type: integer
      upAndDown:
        type: integer
      desprition:
        type: string
      date:
        type: string
  TrailOutput:
    allOf:
      - $ref: "#/definitions/Trail"
      - type: object
        properties:
          id:
            type: integer
            format: int64
  TrailUpdate:
    allOf:
      - $ref: "#/definitions/Trail"
      - $ref: "#/definitions/TrailOutput"
  Registration:
    type: object
    properties:
      idTrail:
        type: integer
        format: int64
      idUser:
        type: integer
        format: int64
  RegistrationOutput:
    type: object
    properties:
      trailName:
        type: string
      email:
        type: string
      idReg:
        type: integer
        format: int64